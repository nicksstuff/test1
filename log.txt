Options : { debug: 'true',
  headless: 'true',
  javametrics: 'true',
  createType: 'microservice/spring',
  appName: 'zzz',
  bluemix: { backendPlatform: 'SPRING' },
  insight: false,
  updateNotifier: false,
  'create-type': 'microservice/spring',
  'app-name': 'zzz',
  'update-notifier': false,
  env: 
   Environment {
     domain: null,
     _events: { error: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     arguments: [],
     options: {},
     adapter: TerminalAdapter { promptModule: [Object] },
     cwd: '/microclimate-workspace/.javaGenerationScripts/spring-application',
     store: Store { _generators: [Object], _meta: [Object] },
     runLoop: Queue { queueNames: [Object], __queues__: [Object], _maxListeners: 0 },
     sharedFs: Store { domain: null, _events: {}, _eventsCount: 0, _maxListeners: 0 },
     lookups: [ '.', 'generators', 'lib/generators' ],
     aliases: [ [Object] ] },
  resolved: '/java-codegen-yeoman/generator-java/generators/app/index.js',
  namespace: '@arf/java:app',
  _: [],
  help: undefined,
  h: undefined,
  'skip-cache': false,
  'skip-install': false,
  buildType: 'maven',
  promptType: 'prompt:patterns',
  frameworkType: 'liberty',
  groupId: 'projects',
  artifactId: undefined,
  version: '1.0-SNAPSHOT',
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ] }
Config (default) : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'MyProject',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/liberty',
  frameworkType: 'liberty',
  groupId: 'projects',
  artifactId: undefined,
  version: '1.0-SNAPSHOT',
  headless: 'false',
  debug: 'false',
  bluemix: undefined,
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: undefined,
  configFiles: [] }
Config (after clone) : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'liberty',
  groupId: 'projects',
  artifactId: undefined,
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [] }
Config (final) : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [],
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application' }
Liberty Generator context : Context {
  id: '@arf/generator-liberty',
  logger: 
   { writeToLog: [Function: writeToLog],
     getLogs: [Function: getLogs],
     clear: [Function: clear] },
  processor: 
   { scan: [Function: startWalk],
     getContentsSync: [Function: getContentsSync] },
  promptmgr: 
   PromptManager {
     prompts: [ [Object], [Object] ],
     types: {},
     prompt: 
      { type: 'list',
        name: 'promptType',
        message: 'Select from the list of available generation options.\n',
        choices: [Object] },
     config: 
      Config {
        defaults: [Object],
        dependencies: [],
        envEntries: [],
        jndiEntries: [],
        properties: [],
        frameworkDependencies: [],
        addProperties: [Function],
        addJndiEntries: [Function],
        addEnvEntries: [Function],
        processProject: [Function],
        appName: 'zzz',
        buildType: 'maven',
        promptType: 'prompt:patterns',
        createType: 'microservice/spring',
        frameworkType: 'spring',
        groupId: 'projects',
        artifactId: 'zzz',
        version: '1.0-SNAPSHOT',
        headless: 'true',
        debug: 'true',
        bluemix: [Object],
        input: undefined,
        platforms: [Object],
        javametrics: 'true',
        configFiles: [],
        templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
        projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application' } },
  conf: 
   Config {
     defaults: Defaults { defaultValues: [Object] },
     dependencies: [],
     envEntries: [],
     jndiEntries: [],
     properties: [],
     frameworkDependencies: [],
     addProperties: [Function],
     addJndiEntries: [Function],
     addEnvEntries: [Function],
     processProject: [Function],
     configFiles: [],
     appName: 'zzz',
     buildType: 'maven',
     promptType: 'prompt:patterns',
     createType: 'microservice/spring',
     frameworkType: 'spring',
     groupId: 'projects',
     artifactId: 'zzz',
     version: '1.0-SNAPSHOT',
     headless: 'true',
     debug: 'true',
     bluemix: { backendPlatform: 'SPRING' },
     platforms: [ 'cli', 'bluemix', 'kube' ],
     javametrics: 'true',
     templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
     projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
     isValid: [Function],
     reset: [Function],
     overwrite: [Function],
     addMissing: [Function],
     addDependencies: [Function],
     addFrameworkDependencies: [Function],
     addKeyValue: [Function] },
  patterns: [],
  paths: [],
  comps: [],
  addCompositions: [Function],
  configure: [Function],
  defaultWriter: [Function] }
Liberty Generator conf (final) : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: [],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  technologies: [ 'rest' ],
  libertybeta: undefined,
  enableApiDiscovery: false }
Spring Generator context : Context {
  id: '@arf/generator-spring',
  logger: 
   { writeToLog: [Function: writeToLog],
     getLogs: [Function: getLogs],
     clear: [Function: clear] },
  processor: 
   { scan: [Function: startWalk],
     getContentsSync: [Function: getContentsSync] },
  promptmgr: 
   PromptManager {
     prompts: [ [Object], [Object], [Object] ],
     types: {},
     prompt: 
      { type: 'list',
        name: 'promptType',
        message: 'Select from the list of available generation options.\n',
        choices: [Object] },
     config: 
      Config {
        defaults: [Object],
        dependencies: [],
        envEntries: [],
        jndiEntries: [],
        properties: [],
        frameworkDependencies: [],
        addProperties: [Function],
        addJndiEntries: [Function],
        addEnvEntries: [Function],
        processProject: [Function],
        appName: 'zzz',
        buildType: 'maven',
        promptType: 'prompt:patterns',
        createType: 'microservice/spring',
        frameworkType: 'spring',
        groupId: 'projects',
        artifactId: 'zzz',
        version: '1.0-SNAPSHOT',
        headless: 'true',
        debug: 'true',
        bluemix: [Object],
        input: undefined,
        platforms: [Object],
        javametrics: 'true',
        configFiles: [],
        templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
        projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application' } },
  conf: 
   Config {
     defaults: Defaults { defaultValues: [Object] },
     dependencies: [],
     envEntries: [],
     jndiEntries: [],
     properties: [],
     frameworkDependencies: [],
     addProperties: [Function],
     addJndiEntries: [Function],
     addEnvEntries: [Function],
     processProject: [Function],
     configFiles: [],
     appName: 'zzz',
     buildType: 'maven',
     promptType: 'prompt:patterns',
     createType: 'microservice/spring',
     frameworkType: 'spring',
     groupId: 'projects',
     artifactId: 'zzz',
     version: '1.0-SNAPSHOT',
     headless: 'true',
     debug: 'true',
     bluemix: { backendPlatform: 'SPRING' },
     platforms: [ 'cli', 'bluemix', 'kube' ],
     javametrics: 'true',
     templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
     projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
     isValid: [Function],
     reset: [Function],
     overwrite: [Function],
     addMissing: [Function],
     addDependencies: [Function],
     addFrameworkDependencies: [Function],
     addKeyValue: [Function] },
  patterns: [],
  paths: [],
  comps: [],
  addCompositions: [Function],
  configure: [Function],
  defaultWriter: [Function] }
Spring Generator conf (final) : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: [],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function] }
Config data for controlBlock /java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [],
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  healthEndpoint: 'health' }
Control data : { excludes: [ '.classpath', '.project' ],
  excludesDir: [ 'target', '.settings', 'build' ],
  composition: 
   [ '/java-codegen-yeoman/generator-java/generators/app/templates/common',
     '/java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring' ],
  subCompositions: { '@arf/generator-spring': [ 'build', 'config', 'health', 'content' ] } }
Processor : { scan: [Function: startWalk],
  getContentsSync: [Function: getContentsSync] }
Processing config file /java-codegen-yeoman/generator-java/generators/app/templates/common/config.js with config : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [],
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  healthEndpoint: 'health' }
Processing config file /java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring/config.js with config : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [],
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  healthEndpoint: 'health' }
Destination path : /microclimate-workspace/.javaGenerationScripts/spring-application
Processing config file /java-codegen-spring/generator-spring/generators/app/templates/build/config.js with config : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: [],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Processing config file /java-codegen-spring/generator-spring/generators/app/templates/config/config.js with config : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Processing config file /java-codegen-spring/generator-spring/generators/app/templates/health/config.js with config : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/config/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Processing config file /java-codegen-spring/generator-spring/generators/app/templates/content/config.js with config : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: [],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/config/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/health/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
template path : microservice/spring
project path : /microclimate-workspace/.javaGenerationScripts/spring-application
Processor : { scan: [Function: startWalk],
  getContentsSync: [Function: getContentsSync] }
Config data for controlBlock /java-codegen-yeoman/generator-java/generators/app/templates/common/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: 
   [ { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-web' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-actuator' },
     { groupId: 'org.springframework.cloud',
       artifactId: 'spring-cloud-starter-hystrix' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-test',
       scope: 'test' } ],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [ '/java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring/config.js' ],
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  healthEndpoint: 'health' }
Control data : { fileFound: [Function: fileFound], subCompositions: {} }
Config data for controlBlock /java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: 
   [ { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-web' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-actuator' },
     { groupId: 'org.springframework.cloud',
       artifactId: 'spring-cloud-starter-hystrix' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-test',
       scope: 'test' } ],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  input: undefined,
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  configFiles: [ '/java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring/config.js' ],
  templateRoot: '/java-codegen-yeoman/generator-java/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  healthEndpoint: 'health' }
Control data : { excludes: [ '.classpath', '.project' ],
  excludesDir: [ 'target', '.settings', 'build' ],
  composition: 
   [ '/java-codegen-yeoman/generator-java/generators/app/templates/common',
     '/java-codegen-yeoman/generator-java/generators/app/templates/microservice/spring' ],
  subCompositions: { '@arf/generator-spring': [ 'build', 'config', 'health', 'content' ] } }
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/.gitignore
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/README.md
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/java/application/Info.java
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/java/application/rest/v1/Example.java
Destination path : /microclimate-workspace/.javaGenerationScripts/spring-application
Processor : { scan: [Function: startWalk],
  getContentsSync: [Function: getContentsSync] }
Config data for controlBlock /java-codegen-spring/generator-spring/generators/app/templates/build/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: 
   [ { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-web' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-actuator' },
     { groupId: 'org.springframework.cloud',
       artifactId: 'spring-cloud-starter-hystrix' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-test',
       scope: 'test' } ],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/config/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/health/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Control data : { excludes: [ 'build.gradle', 'settings.gradle', '.classpath', '.project' ],
  excludesDir: [ 'target', '.settings', 'build' ],
  composition: [ '/java-codegen-spring/generator-spring/generators/app/templates/microservice/spring' ],
  subCompositions: {} }
Config data for controlBlock /java-codegen-spring/generator-spring/generators/app/templates/config/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: 
   [ { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-web' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-actuator' },
     { groupId: 'org.springframework.cloud',
       artifactId: 'spring-cloud-starter-hystrix' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-test',
       scope: 'test' } ],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/config/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/health/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Control data : { excludes: [ '.classpath', '.project' ],
  composition: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build',
     '/java-codegen-spring/generator-spring/generators/app/templates/microservice/spring' ],
  subCompositions: {} }
Config data for controlBlock /java-codegen-spring/generator-spring/generators/app/templates/health/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: 
   [ { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-web' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-actuator' },
     { groupId: 'org.springframework.cloud',
       artifactId: 'spring-cloud-starter-hystrix' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-test',
       scope: 'test' } ],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/config/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/health/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Control data : { excludes: [ '.classpath', '.project' ],
  composition: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build',
     '/java-codegen-spring/generator-spring/generators/app/templates/config',
     '/java-codegen-spring/generator-spring/generators/app/templates/microservice/spring' ],
  subCompositions: {} }
Config data for controlBlock /java-codegen-spring/generator-spring/generators/app/templates/content/control.js : Config {
  defaults: 
   Defaults {
     defaultValues: 
      { appName: [Object],
        buildType: [Object],
        promptType: [Object],
        createType: [Object],
        frameworkType: [Object],
        groupId: [Object],
        artifactId: [Object],
        version: [Object],
        headless: [Object],
        debug: [Object],
        bluemix: [Object],
        input: [Object],
        platforms: [Object],
        javametrics: [Object] } },
  dependencies: 
   [ { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-web' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-actuator' },
     { groupId: 'org.springframework.cloud',
       artifactId: 'spring-cloud-starter-hystrix' },
     { groupId: 'org.springframework.boot',
       artifactId: 'spring-boot-starter-test',
       scope: 'test' } ],
  envEntries: [],
  jndiEntries: [],
  properties: [],
  frameworkDependencies: [],
  addProperties: [Function],
  addJndiEntries: [Function],
  addEnvEntries: [Function],
  processProject: [Function],
  configFiles: 
   [ '/java-codegen-spring/generator-spring/generators/app/templates/build/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/config/config.js',
     '/java-codegen-spring/generator-spring/generators/app/templates/health/config.js' ],
  appName: 'zzz',
  buildType: 'maven',
  promptType: 'prompt:patterns',
  createType: 'microservice/spring',
  frameworkType: 'spring',
  groupId: 'projects',
  artifactId: 'zzz',
  version: '1.0-SNAPSHOT',
  headless: 'true',
  debug: 'true',
  bluemix: { backendPlatform: 'SPRING' },
  platforms: [ 'cli', 'bluemix', 'kube' ],
  javametrics: 'true',
  templateRoot: '/java-codegen-spring/generator-spring/generators/app/templates',
  projectPath: '/microclimate-workspace/.javaGenerationScripts/spring-application',
  isValid: [Function],
  reset: [Function],
  overwrite: [Function],
  addMissing: [Function],
  addDependencies: [Function],
  addFrameworkDependencies: [Function],
  addKeyValue: [Function],
  genVersions: 
   { 'generator-java': '2.7.2',
     'java-common': '2.3.0',
     'generator-ibm-service-enablement': '0.0.97',
     'generator-ibm-cloud-enablement': '0.0.110',
     'generator-spring': '1.0.2' },
  enableApiDiscovery: undefined }
Control data : { excludes: [ '.classpath', '.project' ],
  composition: [ '/java-codegen-spring/generator-spring/generators/app/templates/microservice/spring' ],
  subCompositions: {} }
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/pom.xml
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/resources/application-local.properties
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/resources/application.properties
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/test/java/application/HealthEndpointTest.java
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/resources/public/index.html
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/java/application/SBApplication.java
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/resources/public/error/404.html
CB : writing to : /microclimate-workspace/.javaGenerationScripts/spring-application/src/main/java/application/rest/HealthEndpoint.java
